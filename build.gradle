buildscript {
repositories {
mavenCentral()
}
dependencies {
classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.61"
}
}
plugins {
id "org.jetbrains.kotlin.jvm" version "1.2.61"
}
apply plugin: 'java'
// In this section you declare where to find the dependencies of your project
repositories {
// Use 'jcenter' for resolving your dependencies.
// You can declare any Maven/Ivy/file repository here.
jcenter()
mavenCentral()
maven { url 'https://jitpack.io' }
}
// In this section you declare the dependencies for your production and test code
dependencies {
	//implementation 'com.github.MaxDistructo:mdCore-JDA:1.4.0'
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	compile "com.mashape.unirest:unirest-java:1.4.9"
	compile 'org.slf4j:slf4j-api:1.7.25'
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version:'1.2.61'
	compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version:'0.24.0'
	testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version:'1.2.61'
	compile group: 'org.json', name: 'json', version:'20180813'
	compile group: 'commons-io', name: 'commons-io', version:'2.6'
	compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.2.3'
	compile 'net.dv8tion:JDA:3.7.1_407'
	compile 'com.jagrosh:jda-utilities:2.1.4'
// The production code uses the SLF4J logging API at compile time

}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
jar {
	manifest {
		attributes 'Main-Class': 'maxdistructo.discord.bots.botfather.BaseBot'
	}
}
kotlin {
    experimental {
        coroutines "enable"
    }
}